[NEXT.JS 역할 소개]

로딩이 느리면 검색 엔진이 로딩창으로만 인식 할 수 있다.
구글 등 똑똑한 API는 로딩 중이라고 생각하고 기다릴 수 있다.

[검색 엔진 최적화 대비가 필요할 듯]

[해결책]
0. 코드 스플린트
  ㄴ 리액트 특성상 한번에 받아오는데 (html, js)를 
     CSR일 때는 요청한 페이지만 받아온다.

1. 서버 사이드 랜더링 ( 검색 엔진에 나와야 할 경우 )
  ㄴ 브라우저 > 프론트 서버 > 백엔드 서버 > 데이터베이스 > 백엔드 서버 > 프론트 서버 > 브라우저로 
  ㄴ ★ 서버 사이드 > 첫 방문만 전통적인 방법, 그 다음 페이지 전환일 때 링크, 버튼을 누를 때
  ㄴ ☆ 프리랜더 > 검색엔진일 때만 백앤드 서버에서 데이터를 받아서 HTML을 완성해서 준다.

[항상 코드 스플린트 / 서버 사이드 랜더링을 적용해야 한다]

2. 필요없는 경우
 ㄴ 관리자 페이지,

[실전 예제와 준비사항]

서버 종료 CTRL  + C

[eslint]는 자바스크립트 문법을 규칙에 맞게 쓰고 있는지 체크해주는 툴.

[prettier]는 코드 정렬 툴 eslint에서 정렬 관련 기능을 끄고 prettier로 대체하면 된다. 둘을 eslint-config-prettier 패키지로 연결 가능 

[webpack]은 여러개의 파일을 하나의 js로 합쳐주는 툴.

[next]도 webpack을 쓰고 있는데 내부적으로 쓰고 있어, 따로 설정이 없는 것처럼 보임. 나중에 직접 설정함.

[npmtrends.com] 사람들의 오픈 소스 사용량 확인

[npm i shortid faker]
shortid 랜덤 아이디 생성

faker 랜덤 더미 데이터 생성

